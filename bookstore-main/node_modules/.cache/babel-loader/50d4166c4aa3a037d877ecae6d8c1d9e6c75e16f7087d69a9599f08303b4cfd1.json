{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'https://www.googleapis.com/books/v1/volumes';\nexport const fetchBooks = async () => {\n  try {\n    const response = await axios.get(`${API_URL}?q=subject:fiction&maxResults=15`);\n    if (response.data && response.data.items) {\n      return response.data.items.map(item => ({\n        id: item.id,\n        title: item.volumeInfo.title,\n        synopsis: item.volumeInfo.description,\n        genre: item.volumeInfo.categories ? item.volumeInfo.categories[0] : 'Unknown',\n        cover: item.volumeInfo.imageLinks ? item.volumeInfo.imageLinks.thumbnail : '',\n        rating: 0 // Asumiendo que la calificación será calculada internamente\n      }));\n    } else {\n      return [];\n    }\n  } catch (error) {\n    console.error('Error fetching books:', error);\n    return [];\n  }\n};\nexport const fetchBookDetails = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/${id}`);\n    return {\n      id: response.data.id,\n      title: response.data.volumeInfo.title,\n      description: response.data.volumeInfo.description,\n      genre: response.data.volumeInfo.categories ? response.data.volumeInfo.categories[0] : 'Unknown',\n      cover: response.data.volumeInfo.imageLinks ? response.data.volumeInfo.imageLinks.thumbnail : '',\n      rating: 0 // Asumiendo que la calificación será calculada internamente\n    };\n  } catch (error) {\n    console.error('Error fetching book details:', error);\n    return null;\n  }\n};\nexport const login = async (email, password) => {\n  try {\n    // Aquí se debería hacer una llamada a tu backend para manejar la autenticación\n    // Por ahora, vamos a simular un inicio de sesión exitoso\n    console.log(`Iniciando sesión con email: ${email} y contraseña: ${password}`);\n    return {\n      success: true,\n      token: 'dummy-token'\n    }; // Simulación de éxito\n  } catch (error) {\n    console.error('Error logging in:', error);\n    return {\n      success: false\n    };\n  }\n};\nexport const register = async (name, email, password) => {\n  try {\n    // Aquí se debería hacer una llamada a tu backend para manejar el registro\n    // Por ahora, vamos a simular un registro exitoso\n    console.log(`Registrando usuario con nombre: ${name}, email: ${email}, y contraseña: ${password}`);\n    return {\n      success: true,\n      token: 'dummy-token'\n    }; // Simulación de éxito\n  } catch (error) {\n    console.error('Error registering:', error);\n    return {\n      success: false\n    };\n  }\n};","map":{"version":3,"names":["axios","API_URL","fetchBooks","response","get","data","items","map","item","id","title","volumeInfo","synopsis","description","genre","categories","cover","imageLinks","thumbnail","rating","error","console","fetchBookDetails","login","email","password","log","success","token","register","name"],"sources":["C:/Users/Yovanni/OneDrive/Escritorio/bookstore-main/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://www.googleapis.com/books/v1/volumes';\n\nexport const fetchBooks = async () => {\n  try {\n    const response = await axios.get(`${API_URL}?q=subject:fiction&maxResults=15`);\n    if (response.data && response.data.items) {\n      return response.data.items.map(item => ({\n        id: item.id,\n        title: item.volumeInfo.title,\n        synopsis: item.volumeInfo.description,\n        genre: item.volumeInfo.categories ? item.volumeInfo.categories[0] : 'Unknown',\n        cover: item.volumeInfo.imageLinks ? item.volumeInfo.imageLinks.thumbnail : '',\n        rating: 0, // Asumiendo que la calificación será calculada internamente\n      }));\n    } else {\n      return [];\n    }\n  } catch (error) {\n    console.error('Error fetching books:', error);\n    return [];\n  }\n};\n\nexport const fetchBookDetails = async (id) => {\n  try {\n    const response = await axios.get(`${API_URL}/${id}`);\n    return {\n      id: response.data.id,\n      title: response.data.volumeInfo.title,\n      description: response.data.volumeInfo.description,\n      genre: response.data.volumeInfo.categories ? response.data.volumeInfo.categories[0] : 'Unknown',\n      cover: response.data.volumeInfo.imageLinks ? response.data.volumeInfo.imageLinks.thumbnail : '',\n      rating: 0, // Asumiendo que la calificación será calculada internamente\n    };\n  } catch (error) {\n    console.error('Error fetching book details:', error);\n    return null;\n  }\n};\n\nexport const login = async (email, password) => {\n  try {\n    // Aquí se debería hacer una llamada a tu backend para manejar la autenticación\n    // Por ahora, vamos a simular un inicio de sesión exitoso\n    console.log(`Iniciando sesión con email: ${email} y contraseña: ${password}`);\n    return { success: true, token: 'dummy-token' }; // Simulación de éxito\n  } catch (error) {\n    console.error('Error logging in:', error);\n    return { success: false };\n  }\n};\n\nexport const register = async (name, email, password) => {\n  try {\n    // Aquí se debería hacer una llamada a tu backend para manejar el registro\n    // Por ahora, vamos a simular un registro exitoso\n    console.log(`Registrando usuario con nombre: ${name}, email: ${email}, y contraseña: ${password}`);\n    return { success: true, token: 'dummy-token' }; // Simulación de éxito\n  } catch (error) {\n    console.error('Error registering:', error);\n    return { success: false };\n  }\n};\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}